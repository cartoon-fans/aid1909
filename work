写完随堂作业 用户名
数据库总结
看一下聊天代码ftp代码
githup.com 注册一个用户

存储阶段
1人工管理
2文件管理
3 数据库管理(降低了冗余,提高了增删改查的效率)
数据库分类***开源数据库和非开源数据库

关系型数据库
结构  数据元素-->记录(row)-->数据表(table)-->数据库(datebase)


sql语句
库操作:
查看 show databases;    
创建 create database 库名 charset=utf8;
查看当前所在库: select database();
删库 drop database 库名;
表操作:
创建:create table 表名(字段名 数据类型,....); 数据类型可以设置not null,default=0等等属性
查看 show tables;
删除 drop table 表名;
插入 insert into 表名 values(字段对应的值1,字段对应的值2,...);
查询 select 字段  from 表名 where 条件   
表记录操作
修改  update 表名 set 字段1=值1 ,字段2=值2,...where 条件;
删除  delete from 表名 where 条件;  !!这里where 条件不加会删除表内所有记录
表字段操作
添加字段add
alter  table 表名 add 字段名 数据类型; 
alter  table 表名 add 字段名 数据类型 first;
alter  table 表名 add 字段名 数据类型  after 字段名;
删除字段 drop
alter table 表名  drop 字段名;
修改数据类型 modify
alter  table 表名 modify 字段名  新数据类型 ;
修改字段名 change
alter table 表名 change 旧字段名 新字段名 新数据类型
修改表名 rename
alter table 表名 rename 新表名;
     高级查询语句
like 用在where 子句中  %代表0到多个字符 ,_代表一个字符
select * from class where name like 'a%';
regexp正则也有部分支持
select * from class where name regexp '^b.+';
排序  order by    默认asc升序,desc 表示降序
select * from class where sex='m' order by age;
分页 limit      用于现在select 语句返回的数据数量或者update ,delete操作的数量
联合查询 union 链接两个以上的select语句 多个select结果会删除重复的数据   加上all 可返回所有的结果
select * from class_1 where sex='m' UNION ALL select * from class_1 where age > 9;
子查询  将一个select 查询语句用括号包起来,其结果做另一个select的查询范围 或者where条件的判断条件

 聚合函数                                 
avg(字段名) 该字段的平均值
max(字段名)该字段的最大值
min(字段名)该字段的最小值
sum(字段名)该字段所有记录的和
count(字段名)统计该字段记录的个数
聚合分组  group by
例如 select country ,avg (attack) from anguo group  by country;
聚合筛选 having  去重复 distinct  聚合运算 +-*/%
索引分类       索引优点查询很快 缺点是需要动态维护,会降低写入效率慢
普通索引 mul 唯一索引 unique   主键 primary key
创建 create unique index 索引名  on 表名(字段名);
查看索引  desc 表名        或者  show index from 表明;
删除索引 drop index 索引名 on 表名;
 外键约束 foreign
表关联
一对一   创建的时候 用foreign 创建外建 并且设置级联更新
一对多   创建外建即可
多对多  建立第三方关系表
多表联合查询
select 字段1,字段2...from 表1,表2...where 条件
内链接 inner 左右表  符合条件的
左查询left  显示左表全部 右表符合条件的
右查询 right 显示右表全部 左表符合条件的 
 select * from person inner join dept on person.dept_id=dept.id;
视图
存储的查询语句 调用产生结果集合   

